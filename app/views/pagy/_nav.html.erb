<%#
  This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
  calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").

  The link variable is set to a proc that returns the link tag.
  Usage: link.call( page_number [, text [, extra_attributes_string ]])
-%>
<% link = pagy_link_proc(pagy) %>
<div class="block text-center mx-auto mt-4 p-2 pagy_nav pagination" role="navigation">
  <% if pagy.prev %>  
    <div class="page prev"><%== link.call(pagy.prev, pagy_t('pagy.nav.prev'), 'aria-label="previous"') %></div>
  <% else %>  
    <div class="page prev disabled"><%== pagy_t('pagy.nav.prev') %></div>
  <% end %>

  <% pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36] -%>
    <% if item.is_a?(Integer) %>  
      <div class="page"><%== link.call(item) %></div>
    <% elsif item.is_a?(String) %>  
      <div class="page current"><%= item %></div>
    <% elsif item == :gap %>  
      <div class="page gap"><%== pagy_t('pagy.nav.gap') %></div>
    <% end %>
  <% end %>
  <% if pagy.next %>
    <div class="page next"><%== link.call(pagy.next, pagy_t('pagy.nav.next'), 'aria-label="next"') %></div>
  <% else %>  
    <div class="page next disabled"><%== pagy_t('pagy.nav.next') %></div>
  <% end %>
</div>